@page "/reports/talukaWise/index"
@attribute [Authorize]
@inject PageNumberHelper PageNumberHelper
@inject IAlertService AlertService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime;

    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Taluka Wise Reports</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">List of Reports</li>
                        <li class="breadcrumb-item active">Taluka Wise</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="card">
                <div class="card-header">
                    @if (!loading && filteredReports != null)
                    {
                        <a href="" @onclick="@(() => DownloadCsv())" @onclick:preventDefault style="color:#007bff;">
                            <h3 class="card-title">&nbsp;&nbsp;&nbsp;<i class="fas fa-download"></i>&nbsp;Click here to download</h3>
                        </a>
                    }
                </div>
                <div class="card-body table-responsive p-0">
                    <table class="table text-nowrap">
                        <thead>
                            <tr>
                                <th>Taluka Name</th>
                                <th>Union Councils</th>
                                <th>Total Entries</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (loading)
                            {
                                <tr>
                                    <td colspan="12" class="text-center">
                                        <span class="spinner-border spinner-border-lg align-center"></span>
                                    </td>
                                </tr>
                            }
                            else
                            {
                                @if (filteredReports != null)
                                {
                                    foreach (var item in filteredReports.talukas)
                                    {
                                        <tr>
                                            <td>@item.talukaName</td>
                                            <td>@item.unionCounsils</td>
                                            <td>@item.totalPersons</td>
                                            <td style="white-space: nowrap"></td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div class="card-footer clearfix"></div>
            </div>
        </div>
    </section>

@code {
    private bool loading;
    private FilteredReports filteredReports;
    private string baseUrl = "https://entrynowapi.azurewebsites.net/api/";

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        await GetData();
        loading = false;
    }

    private async Task GetData()
    {
        try
        {
            using (System.Net.Http.HttpClient httpClient = new System.Net.Http.HttpClient())
            {
                using (System.Net.Http.HttpResponseMessage response = await httpClient.GetAsync(baseUrl + "reports/taluka"))
                {
                    string apiResponse = await response.Content.ReadAsStringAsync();
                    filteredReports = Newtonsoft.Json.JsonConvert.DeserializeObject<FilteredReports>(apiResponse);
                }
            }
        }
        catch (Exception e)
        {
            AlertService.Clear(); 
            AlertService.Error(e.Message);
            loading = false;
            StateHasChanged();
        }
    }

    public async void DownloadCsv()
    {
        string url = "https://entrynowapi.azurewebsites.net/api/reports/taluka/download";
        await JSRuntime.InvokeAsync<object>("open", url, "_blank"); 
    }
}