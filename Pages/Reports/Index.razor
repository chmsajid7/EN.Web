@page "/reports/index"
@attribute [Authorize]
@inject IAlertService AlertService
@inject NavigationManager NavigationManager
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime;
@inject NavigationManager NavigationManager

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Reports</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Reports</li>
                </ol>
            </div>
        </div>
    </div>
</section>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <!-- /.row -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <a style="float:left; color:grey;">Reporting View!</a>
                        <a href="" @onclick="@(() => DownloadReport())" @onclick:preventDefault style="float:right; color:grey;"><i class="fas fa-download"></i></a>
                    </div>
                    <!-- ./card-header -->
                    <div class="card-body p-0">

                        <button class="collapsible123" @onclick="Collaps">Open Section 1</button>
                        <div class="contenttt">
                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                        <button class="collapsible123" @onclick="Collaps">Open Section 2</button>
                        <div class="contenttt">
                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                        <button class="collapsible123" @onclick="Collaps">Open Section 3</button>
                        <div class="contenttt">
                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>

                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
</section>

@code {

    public async void Collaps()
    {
        await JSRuntime.InvokeAsync<object>("accessDOMElementToCollaps");
    }

    private bool loading;
    private string baseUrl = "https://entrynowapi.azurewebsites.net/api/";
    private Reports reports = new Reports();
    private List<string> talukas = new List<string>();
    protected override async Task OnInitializedAsync()
    {
        loading = true;
        await GetData();
        loading = false;
        await JSRuntime.InvokeAsync<object>("accessDOMElementToCollaps");
    }
    private async Task GetData()
    {
        try
        {
            using (System.Net.Http.HttpClient httpClient = new System.Net.Http.HttpClient())
            {
                using (System.Net.Http.HttpResponseMessage response = await httpClient.GetAsync(baseUrl + "reports"))
                {
                    string apiResponse = await response.Content.ReadAsStringAsync();
                    reports = Newtonsoft.Json.JsonConvert.DeserializeObject<Reports>(apiResponse);
                }
            }
        }
        catch (Exception e)
        {
            AlertService.Clear(); AlertService.Error(e.Message);
            loading = false;
            StateHasChanged();
        }
    }
    public async void DownloadReport()
    {
        string url = $"{baseUrl}reference/downloadEntriesByReference/1";
        await JSRuntime.InvokeAsync<object>("open", url, "_blank");
    }
    public async void GetAllEntries(string talukaVal, string ucVal)
    {
        string url = $"reports/index/entries/{talukaVal}/{ucVal}";
        await JSRuntime.InvokeAsync<object>("open", url, "_blank");
        //NavigationManager.NavigateTo($"reports/index/entries/{talukaVal}/{ucVal}");
    }
}